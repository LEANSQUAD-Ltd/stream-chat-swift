{"remainingRequest":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/docs/guides/attachments-migration.md","dependencies":[{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/docs/guides/attachments-migration.md","mtime":1622479040878},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-guides-attachments-migration-md-3c3.json","mtime":1621878602951},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/cache-loader/dist/cjs.js","mtime":1621247292444},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/babel-loader/lib/index.js","mtime":1621247292381},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1621247302486},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1621247301494}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/docs/guides/attachments-migration.md"],"names":["React","mdx","frontMatter","metadata","toc","value","id","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {};\nexport const metadata = {\n  \"unversionedId\": \"guides/attachments-migration\",\n  \"id\": \"guides/attachments-migration\",\n  \"isDocsHomePage\": false,\n  \"title\": \"attachments-migration\",\n  \"description\": \"Attachments v4.x migration\",\n  \"source\": \"@site/docs/guides/attachments-migration.md\",\n  \"slug\": \"/guides/attachments-migration\",\n  \"permalink\": \"/stream-chat-swift/guides/attachments-migration\",\n  \"editUrl\": \"https://github.com/GetStream/stream-chat-swift/edit/main/stream-chat-swift-docs/docs/guides/attachments-migration.md\",\n  \"version\": \"current\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Debugging\",\n    \"permalink\": \"/stream-chat-swift/guides/debugging\"\n  },\n  \"next\": {\n    \"title\": \"Controllers Overview\",\n    \"permalink\": \"/stream-chat-swift/controllers/controllers-overview\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'Send attachments',\n  id: 'send-attachments',\n  children: [{\n    value: 'File/image attachments',\n    id: 'fileimage-attachments',\n    children: []\n  }, {\n    value: 'Custom attachments',\n    id: 'custom-attachments',\n    children: []\n  }, {\n    value: 'Summary',\n    id: 'summary',\n    children: []\n  }]\n}, {\n  value: 'Get attachments',\n  id: 'get-attachments',\n  children: [{\n    value: 'File attachments',\n    id: 'file-attachments',\n    children: []\n  }, {\n    value: 'Image attachments',\n    id: 'image-attachments',\n    children: []\n  }, {\n    value: 'Giphy attachments',\n    id: 'giphy-attachments',\n    children: []\n  }, {\n    value: 'Link preview attachments',\n    id: 'link-preview-attachments',\n    children: []\n  }, {\n    value: 'Custom attachments',\n    id: 'custom-attachments-1',\n    children: []\n  }, {\n    value: 'Changes summary',\n    id: 'changes-summary',\n    children: []\n  }]\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"attachments-v4x-migration\"\n    }}>{`Attachments v4.x migration`}</h1>\n    <h2 {...{\n      \"id\": \"send-attachments\"\n    }}>{`Send attachments`}</h2>\n    <p>{`In both `}<inlineCode parentName=\"p\">{`v4.x`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`v3.2`}</inlineCode>{` the sequence of steps is the same:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`[1]`}</strong>{` create a controller for the channel the message should be sent to`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`[2]`}</strong>{` create attachments that should be added to the message`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`[3]`}</strong>{` send the message with attachments using the controller`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\",\n        \"metastring\": \"{7-9}\",\n        \"{7-9}\": true\n      }}>{`// [1] Create a controller\nlet channelController = ChatChannelController(\n    for: ChannelId(type: .messaging, id: \"general\")\n)\n\n// [2] Create attachments (🚨 has changed in \\`v4.x\\`)\nlet attachments = [\n  ...\n]\n\n// [3] Send the message\nchannelController.createNewMessage(\n    text: \"Hey, have a look at this one\",\n    attachments: attachments,\n    completion: { result in\n      // handle the result\n      print(result)\n    }\n)\n`}</code></pre>\n    <p>{`Let's see how to create `}<strong parentName=\"p\">{`file/image`}</strong>{` and `}<strong parentName=\"p\">{`custom`}</strong>{` attachments in `}<inlineCode parentName=\"p\">{`v4.x`}</inlineCode>{` and make the compiler happy.`}</p>\n    <h3 {...{\n      \"id\": \"fileimage-attachments\"\n    }}>{`File/image attachments`}</h3>\n    <p><inlineCode parentName=\"p\">{`Version 3.x`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Create an array of \\`AttachmentEnvelope\\` objects\nlet attachments: [AttachmentEnvelope] = [\n  // Add file attachment by creating \\`ChatMessageAttachmentSeed\\`\n  ChatMessageAttachmentSeed(localURL: fileURL, type: .file),\n  // Add image attachment by creating \\`ChatMessageAttachmentSeed\\`\n  ChatMessageAttachmentSeed(localURL: imageURL, type: .image)\n]\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Version 4.x`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Create an array of \\`AnyAttachmentPayload\\` objects\nlet attachments: [AnyAttachmentPayload] = [\n  // Add file attachment by creating \\`AnyAttachmentPayload\\`\n  try AnyAttachmentPayload(localFileURL: fileURL, attachmentType: .file),\n  // Add image attachment by creating \\`AnyAttachmentPayload\\`\n  try AnyAttachmentPayload(localFileURL: imageURL, attachmentType: .image)\n]\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`.file`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`.image`}</inlineCode>{` attachments are the only built-in attachment types that can be added to the message manually.`}</p>\n    <h3 {...{\n      \"id\": \"custom-attachments\"\n    }}>{`Custom attachments`}</h3>\n    <p>{`To add a custom attachments to the message the custom type has to be created first.\nThis is true for both `}<inlineCode parentName=\"p\">{`v3.2`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`v4.x`}</inlineCode>{` however there're some differences so let's see what they are:`}</p>\n    <p><inlineCode parentName=\"p\">{`Version 3.x`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Declare a custom type conforming to \\`AttachmentEnvelope\\`\nstruct Product: AttachmentEnvelope {\n    let type: AttachmentType = .custom(\"product\")\n\n    let name: String\n    let price: Int\n}\n\n// Create a custom attachment\nlet iPhone = Product(name: \"iPhone 12 Pro\", price: 999)\n\n// Create an array of \\`AttachmentEnvelope\\` objects\nlet attachments: [AttachmentEnvelope] = [\n  // Add custom attachment instance directly\n  iPhone\n]\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Version 4.x`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Declare a custom type conforming to \\`AttachmentPayload\\`\nstruct Product: AttachmentPayload {\n    static let type: AttachmentType = \"product\"\n\n    let name: String\n    let price: Int\n}\n\n// Create an attachment payload\nlet iPhone = Product(name: \"iPhone 12 Pro\", price: 999)\n\n// Create an array of \\`AnyAttachmentPayload\\` objects\nlet attachments: [AnyAttachmentPayload] = [\n  // Create \\`AnyAttachmentPayload\\` that wraps custom attachment payload\n  AnyAttachmentPayload(payload: iPhone)\n]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"summary\"\n    }}>{`Summary`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"th\">{`v3.2`}</inlineCode></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"th\">{`v4.x`}</inlineCode></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of `}<inlineCode parentName=\"td\">{`AttachmentEnvelope`}</inlineCode>{` objects is passed when creating a message`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`An array of `}<inlineCode parentName=\"td\">{`AnyAttachmentPayload`}</inlineCode>{` is passed when creating a message`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attachments of `}<inlineCode parentName=\"td\">{`.file/.image`}</inlineCode>{` type are added via `}<inlineCode parentName=\"td\">{`ChatMessageAttachmentSeed`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Attachments of `}<inlineCode parentName=\"td\">{`.file/.image`}</inlineCode>{` type are added via `}<inlineCode parentName=\"td\">{`AnyAttachmentPayload`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Custom attachment must conform to `}<inlineCode parentName=\"td\">{`AttachmentEnvelope`}</inlineCode>{` protocol and can be directly passed to `}<inlineCode parentName=\"td\">{`createMessage`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Custom attachment must conform to `}<inlineCode parentName=\"td\">{`AttachmentPayload`}</inlineCode>{` protocol and wrapped by `}<inlineCode parentName=\"td\">{`AnyAttachmentPayload`}</inlineCode>{` before passing to `}<inlineCode parentName=\"td\">{`createMessage`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"get-attachments\"\n    }}>{`Get attachments`}</h2>\n    <p>{`In both `}<inlineCode parentName=\"p\">{`v4.x`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`v3.2`}</inlineCode>{` the sequence of steps is the same:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`[1]`}</strong>{` get a `}<inlineCode parentName=\"li\">{`ChatMessage`}</inlineCode>{` model (`}<a parentName=\"li\" {...{\n          \"href\": \"working-with-messages\"\n        }}>{`Working with messages`}</a>{`)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`[2]`}</strong>{` get all attachments of the required type`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`[3]`}</strong>{` access attachment fields`}</li>\n    </ul>\n    <p>{`Let's see how at steps `}<strong parentName=\"p\">{`[2]`}</strong>{` and `}<strong parentName=\"p\">{`[3]`}</strong>{` look in `}<inlineCode parentName=\"p\">{`v4.x`}</inlineCode>{` for different kind of attachments.`}</p>\n    <h3 {...{\n      \"id\": \"file-attachments\"\n    }}>{`File attachments`}</h3>\n    <p>{`File attachment requires prior uploading before the message is sent. The local state is exposed for `}<inlineCode parentName=\"p\">{`.file`}</inlineCode>{` attachments to track how the uploading goes.`}</p>\n    <p><inlineCode parentName=\"p\">{`Version 3.x`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get \\`.file\\` attachments\nlet fileAttachments = message.attachments\n  .compactMap { $0 as? ChatMessageDefaultAttachment }\n  .filter { $0.type == .file }\n\n// Get the first attachment\nif let file = fileAttachments.first {\n  if let localState = file.localState, let localURL = file.localURL {\n    // Attachment is being uploaded, use local URL to show a preview\n    print(localState, localURL)\n  } else if let fileURL = file.url {\n    // Attachment is uploaded, use remote url\n    print(fileURL)\n  }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Version 4.x`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get the first \\`.file\\` attachment\nif let file = message.fileAttachments.first {\n  // Show file preview url. If attachment is being uploaded this will be the local URL.\n  print(file.assetURL)\n\n  if let uploadingState = file.uploadingState {\n    // Attachment is being uploaded, handle uploading progress\n    print(uploadingState)\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"image-attachments\"\n    }}>{`Image attachments`}</h3>\n    <p>{`Image attachment requires prior uploading before the message is sent. The local state is exposed for `}<inlineCode parentName=\"p\">{`.image`}</inlineCode>{` attachments to track how the uploading goes.`}</p>\n    <p><inlineCode parentName=\"p\">{`Version 3.x`}</inlineCode></p>\n    <p>{`Image attachments are exposed as `}<inlineCode parentName=\"p\">{`ChatMessageDefaultAttachment`}</inlineCode>{`. Mandatory fields are `}<strong parentName=\"p\">{`optinal`}</strong>{` because of `}<inlineCode parentName=\"p\">{`ChatMessageDefaultAttachment`}</inlineCode>{` being used for all built-in attachment types.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get \\`.image\\` attachments\nlet imageAttachments = message.attachments\n  .compactMap { $0 as? ChatMessageDefaultAttachment }\n  .filter { $0.type == .image }\n\n// Get the first attachment\nif let image = imageAttachments.first {\n  if let localState = image.localState, let localURL = image.localURL {\n    // Attachment is being uploaded, use local URL to show a preview\n    print(localState, localURL)\n  } else if let imageURL = image.imageURL {\n    // Attachment is uploaded, use remote url\n    print(imageURL)\n  }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Version 4.x`}</inlineCode></p>\n    <p>{`Image attachments are exposed as `}<inlineCode parentName=\"p\">{`ChatMessageImageAttachment`}</inlineCode>{`. Mandatory fields are `}<strong parentName=\"p\">{`non-optinal`}</strong>{` and can be accessed directly on attachment.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get the first \\`.image\\` attachment\nif let image = message.imageAttachments.first {\n  // Show a preview\n  print(image.previewURL)\n\n  if let uploadingState = image.uploadingState {\n    // Attachment is being uploaded, handle uploading progress\n    print(uploadingState)\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"giphy-attachments\"\n    }}>{`Giphy attachments`}</h3>\n    <p>{`The ephemeral message containing giphy attachment will be created when `}<inlineCode parentName=\"p\">{`/giphy`}</inlineCode>{` command is used.`}</p>\n    <p><inlineCode parentName=\"p\">{`Version 3.x`}</inlineCode></p>\n    <p>{`Giphy attachments are exposed as `}<inlineCode parentName=\"p\">{`ChatMessageDefaultAttachment`}</inlineCode>{`. Mandatory fields are `}<strong parentName=\"p\">{`optinal`}</strong>{` because of `}<inlineCode parentName=\"p\">{`ChatMessageDefaultAttachment`}</inlineCode>{` being used for all built-in attachment types.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get \\`.giphy\\` attachments\nlet giphyAttachments = message.attachments\n  .compactMap { $0 as? ChatMessageDefaultAttachment }\n  .filter { $0.type == .giphy }\n\n// Get the first attachments\nif let giphy = giphyAttachments.first {\n  // Unwrap gif URL\n  if let gifURL = giphy.imageURL {\n    // Load and show gif\n    print(gifURL)\n  }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Version 4.x`}</inlineCode></p>\n    <p>{`Giphy attachments are exposed as `}<inlineCode parentName=\"p\">{`ChatMessageGiphyAttachment`}</inlineCode>{`. Mandatory fields are `}<strong parentName=\"p\">{`non-optinal`}</strong>{` and can be accessed directly on attachment.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get the first \\`.giphy\\` attachment\nif let giphy = message.giphyAttachments.first {\n  // Load and show gif right away\n  print(giphy.previewURL)\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"link-preview-attachments\"\n    }}>{`Link preview attachments`}</h3>\n    <p>{`The link attachment will be added to the message automatically if the message is sent with the text containing the URL.`}</p>\n    <p><inlineCode parentName=\"p\">{`Version 3.x`}</inlineCode></p>\n    <p>{`Giphy attachments are exposed as `}<inlineCode parentName=\"p\">{`ChatMessageDefaultAttachment`}</inlineCode>{`. Mandatory fields are `}<strong parentName=\"p\">{`optinal`}</strong>{` because of `}<inlineCode parentName=\"p\">{`ChatMessageDefaultAttachment`}</inlineCode>{` being used for all built-in attachment types.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get \\`.link(...)\\` attachments\nlet linkAttachments = message.attachments\n  .compactMap { $0 as? ChatMessageDefaultAttachment }\n  .filter { $0.type.isLink }\n\n// Get the first attachment\nif let link = linkAttachments.first {\n  // Unwrap the URL\n  if let url = link.url {\n    // Show preview for url\n    print(url)\n  }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Version 4.x`}</inlineCode></p>\n    <p>{`Link preview attachments are exposed as `}<inlineCode parentName=\"p\">{`ChatMessageLinkAttachment`}</inlineCode>{`. Mandatory fields are `}<strong parentName=\"p\">{`non-optinal`}</strong>{` and can be accessed directly on attachment.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Get the first \\`.linkPreview\\` attachment\nif let linkPreview = message.linkAttachments.first {\n  // Handle the link\n  print(linkPreview.originalURL)\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"custom-attachments-1\"\n    }}>{`Custom attachments`}</h3>\n    <p><inlineCode parentName=\"p\">{`Version 3.x`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">{`all built-in attachments exposed as `}<inlineCode parentName=\"li\">{`ChatMessageRawAttachment`}</inlineCode></li>\n      <li parentName=\"ul\">{`custom payload is stored in `}<inlineCode parentName=\"li\">{`data: Data?`}</inlineCode>{` fields`}</li>\n      <li parentName=\"ul\">{`custom data should be decoded manually `}<inlineCode parentName=\"li\">{`data`}</inlineCode></li>\n      <li parentName=\"ul\">{`attachment `}<inlineCode parentName=\"li\">{`id`}</inlineCode>{` is optional`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`// Custom attachment type has to be \\`Decodable\\`\nextension Product: Decodable { /* ... */ }\n\n// Get attachments of custom type\nlet productAttachments = message.attachments\n  .compactMap { $0 as? ChatMessageRawAttachment }\n  .filter { $0.type == .custom(\"product\") }\n\n// Get first custom attachment\nif let productAttachment = productAttachments.first {\n  // Unwrap attachment data\n  if let productData = productAttachment.data {\n    // Try to decode the custom type from data\n    let product = try JSONDecoder().decode(Product.self, from: productData)\n    // Handle custom attachment payload\n    print(product)\n  }\n}\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Version 4.x`}</inlineCode></p>\n    <ul>\n      <li parentName=\"ul\">{`custom attachments are directly accessible on `}<inlineCode parentName=\"li\">{`ChatMessage`}</inlineCode></li>\n      <li parentName=\"ul\">{`custom payload fields are are directly on attachment thanks to `}<inlineCode parentName=\"li\">{`dynamicMemberLookup`}</inlineCode></li>\n      <li parentName=\"ul\">{`attachment `}<inlineCode parentName=\"li\">{`id`}</inlineCode>{` is not-optional 🎉`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`\n// It's recommended but not required to create a typealias for custom attachment type to avoid generic stuff\ntypealias ProductAttachment = _ChatMessageAttachment<Product>\n\n// Get attachments of custom type\nlet productAttachments = message.attachments(payloadType: Product.self)\n\n// Get first custom attachment\nif let product = productAttachments.first {\n  // Access the payload fields right away\n  print(product.name)\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"changes-summary\"\n    }}>{`Changes summary`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"th\">{`v3.2`}</inlineCode></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"th\">{`v4.x`}</inlineCode></th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ChatMessage`}</inlineCode>{` has a single `}<inlineCode parentName=\"td\">{`attachments`}</inlineCode>{` field`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ChatMessage`}</inlineCode>{` has multiple fields one for each attachment type (`}<inlineCode parentName=\"td\">{`imageAttachments/giphyAttachments/etc.`}</inlineCode>{`)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Built-in attachments are exposed as `}<inlineCode parentName=\"td\">{`ChatMessageDefaultAttachment`}</inlineCode>{` with mandatory fields being `}<strong parentName=\"td\">{`optional`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Built-in attachments are exposed as arrays `}<inlineCode parentName=\"td\">{`_ChatMessageAttachment<Payload>`}</inlineCode>{` with concrete payload type with mandatory fields being `}<strong parentName=\"td\">{`non-optional`}</strong></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`To be exposed on the message custom attachment must conform to `}<inlineCode parentName=\"td\">{`ChatMessageAttachment`}</inlineCode>{` protocol`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`In order attachment can be exposed on the message it's payload must conform to `}<inlineCode parentName=\"td\">{`AttachmentPayload`}</inlineCode>{` protocol`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Custom attachments are exposed as `}<inlineCode parentName=\"td\">{`ChatMessageRawAttachment`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Custom attachments are exposed the same way built-in attachments are`}</td>\n        </tr>\n      </tbody>\n    </table>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}