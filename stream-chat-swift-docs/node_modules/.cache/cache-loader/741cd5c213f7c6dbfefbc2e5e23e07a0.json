{"remainingRequest":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/babel-loader/lib/index.js??ref--12-1!/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--12-2!/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--12-3!/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/docs/guides/working-with-members.md","dependencies":[{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/docs/guides/working-with-members.md","mtime":1622479040881},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-guides-working-with-members-md-b2b.json","mtime":1622194425968},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/cache-loader/dist/cjs.js","mtime":1621247292444},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/babel-loader/lib/index.js","mtime":1621247292381},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1621247302486},{"path":"/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1621247301494}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/dmigach/Desktop/stream-chat-swift/stream-chat-swift-docs/docs/guides/working-with-members.md"],"names":["React","mdx","frontMatter","title","metadata","toc","value","id","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\ttitle: 'Working with Members'\n};\nexport const metadata = {\n  \"unversionedId\": \"guides/working-with-members\",\n  \"id\": \"guides/working-with-members\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Working with Members\",\n  \"description\": \"Users that are in a particular channel are members of this channel. Membership allows handling such things as roles, invitations and bans.\",\n  \"source\": \"@site/docs/guides/working-with-members.md\",\n  \"slug\": \"/guides/working-with-members\",\n  \"permalink\": \"/stream-chat-swift/guides/working-with-members\",\n  \"editUrl\": \"https://github.com/GetStream/stream-chat-swift/edit/main/stream-chat-swift-docs/docs/guides/working-with-members.md\",\n  \"version\": \"current\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Working with Reactions\",\n    \"permalink\": \"/stream-chat-swift/guides/working-with-reactions\"\n  },\n  \"next\": {\n    \"title\": \"Working with Watchers\",\n    \"permalink\": \"/stream-chat-swift/guides/working-with-watchers\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'ChatChannelMember object',\n  id: 'chatchannelmember-object',\n  children: []\n}, {\n  value: 'ChannelMember vs User',\n  id: 'channelmember-vs-user',\n  children: []\n}, {\n  value: 'Getting all members for a channel',\n  id: 'getting-all-members-for-a-channel',\n  children: []\n}, {\n  value: 'Filtering members',\n  id: 'filtering-members',\n  children: [{\n    value: 'Filtering by user.name exact match:',\n    id: 'filtering-by-username-exact-match',\n    children: []\n  }, {\n    value: 'Filtering by part of the user.name',\n    id: 'filtering-by-part-of-the-username',\n    children: []\n  }, {\n    value: 'Autocompleting members by user.name',\n    id: 'autocompleting-members-by-username',\n    children: []\n  }, {\n    value: 'Querying single a member by id',\n    id: 'querying-single-a-member-by-id',\n    children: []\n  }, {\n    value: 'Querying several members by id',\n    id: 'querying-several-members-by-id',\n    children: []\n  }, {\n    value: 'Querying channel moderators',\n    id: 'querying-channel-moderators',\n    children: []\n  }, {\n    value: 'Querying banned members',\n    id: 'querying-banned-members',\n    children: []\n  }]\n}, {\n  value: 'Pagination and ordering',\n  id: 'pagination-and-ordering',\n  children: []\n}, {\n  value: 'Adding/removing members',\n  id: 'addingremoving-members',\n  children: [{\n    value: 'Leaving a channel',\n    id: 'leaving-a-channel',\n    children: []\n  }]\n}, {\n  value: 'Observing changes to members',\n  id: 'observing-changes-to-members',\n  children: [{\n    value: 'Without extra data',\n    id: 'without-extra-data',\n    children: []\n  }, {\n    value: 'Using Combine publishers',\n    id: 'using-combine-publishers',\n    children: []\n  }, {\n    value: 'SwiftUI Wrappers',\n    id: 'swiftui-wrappers',\n    children: []\n  }]\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`Users that are in a particular channel are members of this channel. Membership allows handling such things as roles, invitations and bans.\nOne of the use cases for members is members list for a channel:`}</p>\n    <img src=\"../img/members-list.png\" width=\"40%\" />\n    <h2 {...{\n      \"id\": \"chatchannelmember-object\"\n    }}>{`ChatChannelMember object`}</h2>\n    <p>{`Members are represented by `}<inlineCode parentName=\"p\">{`ChatChannelMember`}</inlineCode>{` model.`}</p>\n    <h2 {...{\n      \"id\": \"channelmember-vs-user\"\n    }}>{`ChannelMember vs User`}</h2>\n    <p><inlineCode parentName=\"p\">{`ChatChannelMember`}</inlineCode>{` is a subclass of `}<inlineCode parentName=\"p\">{`ChatUser`}</inlineCode>{` and apart properties typical for users, it also contains such info as member's role (owner, admin, moderator or member), invitation and ban details.\nThe difference between these two is that `}<inlineCode parentName=\"p\">{`ChatUser`}</inlineCode>{` models represent all the users present on a Stream Chat server, whereas `}<inlineCode parentName=\"p\">{`ChatChannelMember`}</inlineCode>{` is user's representation in particular channel. That means that a single user is represented by different `}<inlineCode parentName=\"p\">{`ChatChannelMember`}</inlineCode>{` in different channels.`}</p>\n    <h2 {...{\n      \"id\": \"getting-all-members-for-a-channel\"\n    }}>{`Getting all members for a channel`}</h2>\n    <p><inlineCode parentName=\"p\">{`ChatChannelMemberListController`}</inlineCode>{` is an entity that provides access to members.\nTo get all the members for a channel with `}<inlineCode parentName=\"p\">{`general`}</inlineCode>{` id:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(cid: .init(type: .messaging, id: \"general\"), filter: .none) \n)\n\nmemberListController.synchronize { error in \n    // handle error / access members \n    print(error ?? memberListController.members) \n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"filtering-members\"\n    }}>{`Filtering members`}</h2>\n    <p>{`The endpoint working with members supports filtering on numerous criteria, for example:`}</p>\n    <h3 {...{\n      \"id\": \"filtering-by-username-exact-match\"\n    }}>{`Filtering by user.name exact match:`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(\n        cid: .init(type: .messaging, id: \"general\"),\n        filter: .equal(.name, to: \"Lando\") // will only match members with name \"Lando\"\n    )\n) \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"filtering-by-part-of-the-username\"\n    }}>{`Filtering by part of the user.name`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(\n        cid: .init(type: .messaging, id: \"general\"),\n        filter: .query(.name, text: \"an\") // Returns Lando, Conan, any name with \"an\"\n    ) \n) \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"autocompleting-members-by-username\"\n    }}>{`Autocompleting members by user.name`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(\n        cid: .init(type: .messaging, id: \"general\"),\n        filter: .autocomplete(.name, text: \"La\") // Returns all the members with names starting with \"La\"\n    ) \n) \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"querying-single-a-member-by-id\"\n    }}>{`Querying single a member by id`}</h3>\n    <p><inlineCode parentName=\"p\">{`ChatChannelMemberController`}</inlineCode>{` is an entity that allows to work with and observe changes for a specific member.\nIt has convenience methods for banning and unbanning a member.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberController = chatClient.memberController(\n    userId: \"user-id\",\n    in: .init(type: .messaging, id: \"general\")\n)\n\n// Ban a member for 10 minutes\nmemberController.ban(for: 10, reason: \"spam\")\nmemberController.unban()\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"querying-several-members-by-id\"\n    }}>{`Querying several members by id`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(\n        cid: .init(type: .messaging, id: \"general\"),\n        filter: .in(.id, values: [\"first-user\", \"second-user\"])\n    ) \n) \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"querying-channel-moderators\"\n    }}>{`Querying channel moderators`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(\n        cid: .init(type: .messaging, id: \"general\"),\n        filter: .equal(.isModerator, to: true)\n    )\n) \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"querying-banned-members\"\n    }}>{`Querying banned members`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(\n        cid: .init(type: .messaging, id: \"general\"),\n        filter: .equal(.isBanned, to: true)\n    ) \n) \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"pagination-and-ordering\"\n    }}>{`Pagination and ordering`}</h2>\n    <p>{`Since there potentially can be large amount of members in a channel, querying members supports pagination.\nBy default members are ordered from oldest to newest and can be paginated using offset-based pagination:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`memberListController.loadNextMembers(limit: 10) { error in \n    // handle error / access members \n    print(error ?? memberListController.members) \n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"addingremoving-members\"\n    }}>{`Adding/removing members`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let controller = chatClient.channelController(for: .init(type: .messaging, id: \"general\")) \ncontroller.addMembers(userIds: [\"lando\", \"ann\"]) \ncontroller.removeMembers(userIds: [\"raya\"])\n`}</code></pre>\n    <div {...{\n      \"className\": \"admonition admonition-caution alert alert--warning\"\n    }}><div parentName=\"div\" {...{\n        \"className\": \"admonition-heading\"\n      }}><h5 parentName=\"div\"><span parentName=\"h5\" {...{\n            \"className\": \"admonition-icon\"\n          }}><svg parentName=\"span\" {...{\n              \"xmlns\": \"http://www.w3.org/2000/svg\",\n              \"width\": \"16\",\n              \"height\": \"16\",\n              \"viewBox\": \"0 0 16 16\"\n            }}><path parentName=\"svg\" {...{\n                \"fillRule\": \"evenodd\",\n                \"d\": \"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z\"\n              }}></path></svg></span>{`caution`}</h5></div><div parentName=\"div\" {...{\n        \"className\": \"admonition-content\"\n      }}><p parentName=\"div\">{`You can only add/remove up to 100 members at once.`}</p></div></div>\n    <h3 {...{\n      \"id\": \"leaving-a-channel\"\n    }}>{`Leaving a channel`}</h3>\n    <p>{`Leaving a channel is the same as removing members from a channel, but it's called with the current user id:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let controller = chatClient.channelController(\n    for: .init(type: .messaging, id: \"general\")\n) \ncontroller.removeMembers(userIds: [\"current-user-id\"])\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"observing-changes-to-members\"\n    }}>{`Observing changes to members`}</h2>\n    <p>{`Set the delegate of `}<inlineCode parentName=\"p\">{`ChatChannelMemberListController`}</inlineCode>{` to observe the changes in the system.`}</p>\n    <p>{`The delegate can be set directly only if you're `}<strong parentName=\"p\">{`not`}</strong>{` using custom extra data types. Due to the current limits of Swift and the way it handles protocols with associated types, it's required to use `}<inlineCode parentName=\"p\">{`setDelegate`}</inlineCode>{` method instead to set the delegate, if you're using custom extra data types.`}</p>\n    <h3 {...{\n      \"id\": \"without-extra-data\"\n    }}>{`Without extra data`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`class Controller: ChatChannelMemberListControllerDelegate {\n    let memberListController: ChatChannelMemberListController\n\n    init() {\n        memberListController = chatClient.memberListController( \n            query: .init(cid: .init(type: .messaging, id: \"general\"), filter: .none) \n        )\n        memberListController.delegate = self\n    }\n\n    func memberListController(\n        _ controller: ChatChannelMemberListController,\n        didChangeMembers changes: [ListChange<ChatChannelMember>]\n    ) {\n        // process changes\n    }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-combine-publishers\"\n    }}>{`Using Combine publishers`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`let memberListController = chatClient.memberListController( \n    query: .init(cid: .init(type: .messaging, id: \"general\"), filter: .equal(.name, to: \"Lando\"))\n)\n// Subscribe for controller state changes\nmemberListController\n    .statePublisher\n    .sink(receiveValue: { print($0) })\n    .store(in: &cancellables)\n\n// Subscribe for members changes\nmemberListController\n    .memberChangePublisher\n    .sink(receiveValue: { print($0) })\n    .store(in: &cancellables)\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"swiftui-wrappers\"\n    }}>{`SwiftUI Wrappers`}</h3>\n    <p><inlineCode parentName=\"p\">{`ChatChannelMemberListController`}</inlineCode>{` is fully compatible with SwiftUI:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-swift\"\n      }}>{`struct MemberListView: View {\n    @StateObject var memberList: ChatChannelMemberListController.ObservableObject\n    \n    var body: some View {\n        VStack {\n            List(memberList.members, id: \\\\.self) { member in\n                HStack {\n                    Text(member.name ?? \"Unknown\")\n                    Text(member.userRole.rawValue)\n                }\n            }\n        }\n        .onAppear {\n            // call \\`synchronize()\\` to update the locally cached data.\n             memberList.controller.synchronize() \n        }\n        .navigationBarTitle(Text(\"Members\"))\n    }\n}\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}