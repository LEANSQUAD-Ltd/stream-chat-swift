(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{114:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),o=(n(0),n(125)),l={title:"Controllers Overview"},i={unversionedId:"controllers/controllers-overview",id:"controllers/controllers-overview",isDocsHomePage:!1,title:"Controllers Overview",description:"This page contains a list of all available controllers within StreamChat, including their short description and typical use-cases.",source:"@site/docs/controllers/controllers-overview.md",slug:"/controllers/controllers-overview",permalink:"/stream-chat-swift/controllers/controllers-overview",editUrl:"https://github.com/GetStream/stream-chat-swift/edit/main/stream-chat-swift-docs/docs/controllers/controllers-overview.md",version:"current",sidebar:"docs",previous:{title:"attachments-migration",permalink:"/stream-chat-swift/guides/attachments-migration"},next:{title:"UI Components Overview",permalink:"/stream-chat-swift/ui-components/ui-components-overview"}},c=[],s={toc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This page contains a list of all available controllers within ",Object(o.b)("inlineCode",{parentName:"p"},"StreamChat"),", including their short description and typical use-cases."),Object(o.b)("hr",null),Object(o.b)("h4",{id:"currentchatusercontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"CurrentChatUserController")),Object(o.b)("p",null,"Used for operations related to the current user, like setting the current user, observing its changes, etc."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:")," Current user profile screen, a log-in screen, ..."),Object(o.b)("h4",{id:"chatconnectioncontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatConnectionController")),Object(o.b)("p",null,"Used for observing a connection status of the system and handling the connection manually if ",Object(o.b)("inlineCode",{parentName:"p"},"config.shouldConnectAutomatically")," is set to false."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:")," connection status banner (connecting/connected), ..."),Object(o.b)("h4",{id:"chatusercontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatUserController")),Object(o.b)("p",null,"Used for operations related to any user of a chat, like muting, getting user info, and observing its changes."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:"),' User profile screen, quick actions on a user ("Mute user"), ...'),Object(o.b)("h4",{id:"chatuserlistcontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatUserListController")),Object(o.b)("p",null,"Used to get a list of all users in the chat app. You can also specify ",Object(o.b)("inlineCode",{parentName:"p"},"UserListQuery")," to filter the users. Supports pagination."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:")," Show list of all users in the app."),Object(o.b)("h4",{id:"chatchannellistcontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatChannelListController")),Object(o.b)("p",null,"Used to get a list of all channels in the app matching the provided ",Object(o.b)("inlineCode",{parentName:"p"},"ChannelListQuery"),". Supports pagination."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:")," Show a list of channels (the main page of most chat apps)"),Object(o.b)("h4",{id:"chatchannelcontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatChannelController")),Object(o.b)("p",null,"Used for operations related to a channel, like getting all messages, sending new messages, but also adding/removing members or editing the channel details and deleting it."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:"),' Messages screen, channel quick actions ("Delete channel", etc.'),Object(o.b)("h4",{id:"chatchannelmembercontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatChannelMemberController")),Object(o.b)("p",null,"Used for operations related to a member of a channel, like banning, getting member info, and observing its changes."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:"),' Member profile screen, quick actions on a member ("Ban user"), ...'),Object(o.b)("h4",{id:"chatchannelmemberlistcontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatChannelMemberListController")),Object(o.b)("p",null,"Used to get a list of all members of a channel. You can also specify ",Object(o.b)("inlineCode",{parentName:"p"},"MemberListQuery")," to filter the members. Supports pagination."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:")," Show list of all members in the channel."),Object(o.b)("h4",{id:"chatmessagecontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatMessageController")),Object(o.b)("p",null,"Used for operations related to a message, like deleting the message, adding reacting, and observing its changes."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:"),' Message detail screen, quick actions on a message ("Add Reaction"), ...'),Object(o.b)("h4",{id:"chatusersearchcontroller"},Object(o.b)("inlineCode",{parentName:"h4"},"ChatUserSearchController")),Object(o.b)("p",null,"Used for performing a full-text search in available users by their name and id."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"Typical usage:")," User mention suggestion, add to channel suggestion, search users screen, ..."))}p.isMDXComponent=!0},125:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,h=b["".concat(l,".").concat(m)]||b[m]||u[m]||o;return n?a.a.createElement(h,i(i({ref:t},s),{},{components:n})):a.a.createElement(h,i({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);